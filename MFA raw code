#include <Keypad.h>
#include <SPI.h>
#include <MFRC522.h>

const int ROW_NUM = 4; //four rows
const int COLUMN_NUM = 4; //four columns
#define SS_PIN 5
#define RST_PIN 9
#define LED 3 //connect the LED to number 3 pin
#define BUZZER 2 // connect the buzzer to 2 pin
#define ACCESS_DELAY 3000
#define DENIED_DELAY 1000
boolean RFID_Mode = 0;
#define statusLed 6 //led after pin is right, RFID unlock Led
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.

char keys[ROW_NUM][COLUMN_NUM] = {
  {'1','2','3', 'A'},
  {'4','5','6', 'B'},
  {'7','8','9', 'C'},
  {'*','0','#', 'D'}
};

byte pin_rows[ROW_NUM] = {10, 8, 14, 15}; //connect to the row pinouts of the keypad, modify pin numbers if you are using different pins
byte pin_column[COLUMN_NUM] = {16, 17, 18, 19}; //connect to the column pinouts of the keypad, modify pin numbers if you are using different pins

Keypad keypad = Keypad( makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM );

String inputString;
long inputInt;

void setup() {
  Serial.begin(9600);
  inputString.reserve(10); // maximum number of digit for a number is 10, change if needed
  SPI.begin();          // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  pinMode(LED, OUTPUT);
  pinMode(statusLed, OUTPUT);
  pinMode(BUZZER, OUTPUT);
  noTone(BUZZER);
  digitalWrite(LED, LOW);
  Serial.println("Enter PIN");
  Serial.println();
}

void loop() 
{
  char key = keypad.getKey();
  if (key) 
  {
    Serial.println(key);
    if (key >= '0' && key <= '9')  // only act on numeric keys
    {                                   
      inputString += key;               // append new character to input string
    } 
    else if (key == '#') 
    {
      if (inputString.length() > 0) 
      {
        inputInt = inputString.toInt(); // YOU GOT AN INTEGER NUMBER
        Serial.println(inputInt);
        if (inputInt == 4556)
          {
          digitalWrite(statusLed, HIGH);
          Serial.println("PIN OK!!");
          Serial.println("Put your card on the reader for scanning ...");
          Serial.println("");
          RFID_Mode=1;
          }
        else 
          {
            Serial.println("Wrong Pin!!!!");
            Serial.println("Enter correct Pin Again");
          }
        inputString = "";               
      }
    } else if (key == '*') {
      inputString = "";       
    }
  }
  if (RFID_Mode == 1){
           if ( ! mfrc522.PICC_IsNewCardPresent())  //Check for availability of new cards
              {
                return;
              }
           if ( ! mfrc522.PICC_ReadCardSerial())  // If card is detected , then read the contents inside RFID
              {
                 return;
              }
           
           Serial.print("UID tag :"); //Show UID on serial monitor
           String content= "";
           byte letter;
           for (byte i = 0; i < mfrc522.uid.size; i++) 
                {
                  Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
                  Serial.print(mfrc522.uid.uidByte[i], HEX);
                  content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
                  content.concat(String(mfrc522.uid.uidByte[i], HEX));
                }
            Serial.println();
            Serial.print("Message : ");
            content.toUpperCase();
            if (content.substring(1) == " ") // enter your own card number after copying it from serial monitor
            {
              Serial.println("Authorized access");
              Serial.println();
              digitalWrite(statusLed, LOW);
              digitalWrite(LED, HIGH);
              delay(ACCESS_DELAY);
              digitalWrite(LED, LOW);
    
             }
 
            else   {
              Serial.println("");
              Serial.println("Access denied");
              digitalWrite(statusLed, LOW);
              Serial.println("RESET!!!Enter Pin Again");
              tone(BUZZER, 300);
              delay(DENIED_DELAY);
              noTone(BUZZER);
              }
        }
        RFID_Mode=0;
}


            
