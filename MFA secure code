#include <Keypad.h>
#include <SPI.h>
#include <MFRC522.h>
#include <AES.h>


//RFID Initialize ...........................................................................................................................................
const int ROW_NUM = 4; //four rows
const int COLUMN_NUM = 4; //four columns
#define SS_PIN 5
#define RST_PIN 9
#define LED 3 //connect the LED to number 3 pin
#define BUZZER 2 // connect the buzzer to 2 pin
#define ACCESS_DELAY 3000
#define DENIED_DELAY 1000
boolean RFID_Mode = 0;
#define statusLed 6 //led after pin is right 
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.


//Keypad Initialize ...........................................................................................................................................
char keys[ROW_NUM][COLUMN_NUM] = {
  {'1','2','3', 'A'},
  {'4','5','6', 'B'},
  {'7','8','9', 'C'},
  {'*','0','#', 'D'}
};
byte pin_rows[ROW_NUM] = {10, 8, 14, 15}; //connect to the row pinouts of the keypad
byte pin_column[COLUMN_NUM] = {16, 17, 18, 19}; //connect to the column pinouts of the keypad
Keypad keypad = Keypad( makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM );
String inputString;
long inputInt;



//AES Encryption Initialize ...........................................................................................................................................
//key[16] cotain 16 byte key(128 bit) for encryption of Keypad 4 digit vala pin
  byte key[16]={0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F};
// Hex encrypted pin
  byte cypher[16]={0x11, 0x67,0x16,0x15,0x64,0xD9,0x5A,0xC0,0xC8,0x61,0x30,0x97,0x98,0xE9,0xB8,0xE1};
//decryptedtext[16] stores decrypted text after decryption
  byte decryptedtext[16];
  AES128 aes128;


void setup() // initializations and setup required for arduino to work. Can ignore.
{
  Serial.begin(9600);
  inputString.reserve(10);                                                        // maximum number of digit for a number is 10, change if needed
  SPI.begin();                                                                   // Initiate  SPI bus
  mfrc522.PCD_Init();                                                           // Initiate MFRC522
  pinMode(LED, OUTPUT);
  pinMode(statusLed, OUTPUT);
  pinMode(BUZZER, OUTPUT);
  noTone(BUZZER);
  digitalWrite(LED, LOW);
  Serial.println("Enter PIN");
  Serial.println();
  aes128.setKey(key,16);                                                      // Setting Key for AES
  aes128.decryptBlock(decryptedtext,cypher);
  Serial.println();
}



//main Logic for working starts here.  
void loop() 
{
  
  String s = (char*)decryptedtext;                                        //Char array to string(Decrypted pin is converted from char to string and stored in S)
  int si = s.toInt();                                                     //string to int (converts decrypted string S from above to int to make it usable further in code)
  
  char key = keypad.getKey();                                            // This initialises number pad to take input from it
  if (key)                                                              //Logic to read and accept correct pin
  {
    //Serial.println(key);                                             //uncomment to print pin on serial monitor
    if (key >= '0' && key <= '9')                                     // only act on numeric keys, no alphabets accepted
    {                     
      Serial.println("*");              
      inputString += key;                                            // append new character to input string
    } 
    else if (key == '#')                                            // If input # is recieved, then treat is as OK/ENTER Button
    {
      if (inputString.length() > 0) 
      {
        inputInt = inputString.toInt();                             // YOU GOT AN INTEGER NUMBER
        Serial.println("*");
        if (inputInt == si)                                        //Comparison between Input pin and decrypted pin
          {
          digitalWrite(statusLed, HIGH);                          //turn on LED if correct pin 
          Serial.println("PIN OK!!");
          Serial.println("Put your card on the reader for scanning ...");
          Serial.println("");
          RFID_Mode=1;                                                          //If correct pin is recieved, then RFID function is activated by setting switch to 1
          }
          
        else 
          {
            Serial.println("Wrong Pin!!!!");
            Serial.println("Enter correct Pin Again");
            tone(BUZZER, 300);
            delay(DENIED_DELAY);
            noTone(BUZZER);
          }
        inputString = "";               
      }
    } else if (key == '*') {                                                //If * then treat it as backspace
      inputString = "";       
    }
  }

  
  if (RFID_Mode == 1) //function that activates RFID card
  {
           if ( ! mfrc522.PICC_IsNewCardPresent()) 
              {
                return;
              }
           if ( ! mfrc522.PICC_ReadCardSerial()) 
              {
                 return;
              }
           //Show UID on serial monitor
           String content= "";
           byte letter;
           for (byte i = 0; i < mfrc522.uid.size; i++) 
                {
                 // Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
                 // Serial.print(mfrc522.uid.uidByte[i], HEX);
                  content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
                  content.concat(String(mfrc522.uid.uidByte[i], HEX));
                }
             Serial.println();
            Serial.print("Message:");
            content.toUpperCase();
            if (content.substring(1) == encryptedRfid())
            {
              Serial.println("Authorized access");
              Serial.println();
              digitalWrite(statusLed, LOW);
              digitalWrite(LED, HIGH);
              delay(ACCESS_DELAY);
              digitalWrite(LED, LOW);
    
             }
 
            else   {
              Serial.println("Access denied");
              Serial.println();
              digitalWrite(statusLed, LOW);
              Serial.println("RESET!!!Enter Pin Again");
              tone(BUZZER, 300);
              delay(DENIED_DELAY);
              noTone(BUZZER);
              }
        }
        RFID_Mode=0;
}

String encryptedRfid()                                                      // Function that decrypts RFID card data 
{
  byte key1[16]={0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F}; //key for encryption 
  byte cypher1[16]={0x26,0xF5,0xBC,0xC4,0x22,0xFB,0xAA,0x3,0xC1,0x2C,0xC6,0x3B,0x41, 0x57, 0x25,0xB7};          //Encrypted Key
  byte decryptedtext1[16];                                                                                      //Stores Decrypted Text
  AES128 aes128;
  Serial.begin(9600);
  aes128.setKey(key1,16);                                                                                     // Setting Key for AES
  aes128.decryptBlock(decryptedtext1,cypher1);
  Serial.println();
  String s1 = (char*)decryptedtext1;                                                                         //Char array to string
  return s1;
}
